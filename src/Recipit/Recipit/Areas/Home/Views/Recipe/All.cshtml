@using Recipit.Infrastructure.Data.Models.Contracts
@using Recipit.ViewModels.Recipe
@model IEnumerable<RecipeDisplayModel>
<link href="~/css/recipesall.css" rel="stylesheet" />

<form class="search-products-form" id="recipeFilterForm">
    <input class="search-input" type="text" id="name" name="name" placeholder="Име">
    <select class="select-category" name="categories" id="category">
        <option value="@string.Empty">Всички категории</option>
        <option value="@Category.Appetizer">Предястие</option>
        <option value="@Category.MainCourse">Основно ястие</option>
        <option value="@Category.Salad">Салата</option>
        <option value="@Category.Dessert">Десерт</option>
        <option value="@Category.Soup">Супа</option>
    </select>
    <input class="search-input" type="text" id="author" name="author" placeholder="Автор">
    <input class="search-input" type="number" id="averageRating" name="averageRating" placeholder="Оценка">
    <input class="search-input" type="number" id="nutritionalValue" name="nutritionalValue" placeholder="Калории">
    <button class="search-btn" type="submit"><span class="oi fa-solid fa-filter" aria-hidden="true"></span>Филтрирай</button>
</form>
<div class="recipes-container" id="recipeSkeleton">
    <!-- Repeat this structure for the number of skeletons you want to show, which is 4 in this case -->
    <div class="recipe-skeleton-container">
        <div class="recipe-data skeleton-box"></div>
        <div class="recipe-title-and-rating skeleton-box"></div>
        <div class="recipe-products skeleton-box"></div>
        <div class="recipe-buttons skeleton-box"></div>
    </div>
    <div class="recipe-skeleton-container">
        <div class="recipe-data skeleton-box"></div>
        <div class="recipe-title-and-rating skeleton-box"></div>
        <div class="recipe-products skeleton-box"></div>
        <div class="recipe-buttons skeleton-box"></div>
    </div>
    <div class="recipe-skeleton-container">
        <div class="recipe-data skeleton-box"></div>
        <div class="recipe-title-and-rating skeleton-box"></div>
        <div class="recipe-products skeleton-box"></div>
        <div class="recipe-buttons skeleton-box"></div>
    </div>
    <div class="recipe-skeleton-container">
        <div class="recipe-data skeleton-box"></div>
        <div class="recipe-title-and-rating skeleton-box"></div>
        <div class="recipe-products skeleton-box"></div>
        <div class="recipe-buttons skeleton-box"></div>
    </div>
</div>

<div class="recipes-container"id="recipeDisplay">
@*     <div class="recipe-container">
        <div class="recipe-data">
            <img class="recipe-image" src="~/images/bg-photo.png" alt="image"/>
            <div class="recipe-title-and-rating">
                <h1 class="recipe-title">Title</h1>
                <div class="stars-container">
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-solid fa-star"></i>
                    <i class="fa-regular fa-star"></i>
                </div>
            </div>
        </div>
        <div class="recipe-products">
            <h1 class="recipe-ingridients-title">Ingridients</h1>
            <div class="ingridients-container">
                <div class="ingridient">
                    <img class="ingridient-image" src="~/images/bg-photo.png" alt="image" />
                    <h1 class="ingridient-title">Title</h1>
                </div>
                <div class="ingridient">
                    <img class="ingridient-image" src="~/images/bg-photo.png" alt="image" />
                    <h1 class="ingridient-title">Title</h1>
                </div>
                <div class="ingridient">
                    <img class="ingridient-image" src="~/images/bg-photo.png" alt="image" />
                    <h1 class="ingridient-title">Title</h1>
                </div>
                <div class="ingridient">
                    <img class="ingridient-image" src="~/images/bg-photo.png" alt="image" />
                    <h1 class="ingridient-title">Title</h1>
                </div>
                <div class="ingridient">
                    <img class="ingridient-image" src="~/images/bg-photo.png" alt="image" />
                    <h1 class="ingridient-title">Title</h1>
                </div>
                <div class="ingridient">
                    <h1 class="ingridient-more">+3 More</h1>
                </div>
            </div>
        </div>
        <div class="recipe-buttons">
            <button class="view-recipe-btn"><i class="fa fa-eye"></i>View Recipe</button>
            <h2 class="recipe-calories"><i class="fa fa-fire"></i>230 calories</h2>
        </div>
    </div> *@
</div>
<div id="pagination">
    <button id="prevPage">Previous</button>
    <span id="currentPage">1</span>
    <button id="nextPage">Next</button>
</div>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
 <script>
    $(document).ready(function () {
        var currentPage = 1;
        var pageSize = 6; // Adjust this as needed
        var totalPages; // Variable to store total pages
        var currentFilterData = {}; // Object to hold the current filter data

        function loadRecipes(page, filterData) {
            $('#recipeSkeleton').show();
            $('#recipeDisplay').hide();

            var url = '/home/recipe/recipes';
            var data = { currentPage: page, pageSize: pageSize };

            if (filterData) { // If there is filter data, change URL and append data
                url = '/home/recipe/filter';
                data = { ...filterData, currentPage: page, pageSize: pageSize };
            }

            $.ajax({
                type: 'GET',
                url: url,
                data: data,
                success: function (response) {
                    $('#recipeSkeleton').hide();
                    $('#recipeDisplay').show();
                    console.log(response);
                    if (response.recipes) {
                        displayRecipes(response.recipes); // Pass the 'recipes' object
                    } else {
                        console.error('No recipes found in response');
                    }
                    totalPages = response.totalPages;
                    updatePagination(currentPage);
                },
                error: function (error) {
                    $('#recipeSkeleton').hide();
                    $('#recipeDisplay').show();
                    console.log(error);
                }
            });
        }

        // Initial load
        loadRecipes(currentPage);

        $('#prevPage').click(function () {
            console.log("prevPage Current Page before increment:", currentPage);
            if (currentPage > 1) {
                currentPage--;
                loadRecipes(currentPage, currentFilterData);
                console.log("prevPage Current Page after increment:", currentPage);
            }
        });

        $('#nextPage').click(function () {
            console.log(" nextPageCurrent Page before increment:", currentPage);
            if (currentPage < totalPages) {
                currentPage++;
                console.log(" nextPageCurrent Page after increment:", currentPage);
                loadRecipes(currentPage, currentFilterData);
            }
        });

        function updatePagination(page) {
            $('#currentPage').text(page);
            $('#prevPage').prop('disabled', page === 1);
            $('#nextPage').prop('disabled', page === totalPages);
        }

        $('#recipeFilterForm').submit(function (event) {
            event.preventDefault();
            currentPage = 1; // Reset to first page on new filter

            currentFilterData = {
                Name: $('#name').val(),
                Category: $('#category').val(),
                Author: $('#author').val(),
                AverageRating: $('#averageRating').val(),
                NutritionalValue: $('#nutritionalValue').val()
            };

            loadRecipes(currentPage, currentFilterData);
        });

        function displayRecipes(data) {
            if (!data || !data.$values || !Array.isArray(data.$values)) {
                console.error('Invalid data structure:', data);
                return; // Exit the function if data is not as expected
            }

            var recipes = data.$values; // Access the array from $values property
            var html = '';

            recipes.forEach(function (recipe) {

                var stars = generateStarRating(recipe.averageRating);

                var products = recipe.products && recipe.products.$values ? recipe.products.$values : [];

                var ingredientsHtml = '';
                for (var i = 0; i < products.length && i < 5; i++) {
                    ingredientsHtml += `<div class="ingridient">
                    <img class="ingridient-image" src="${products[i].photo}" alt="image" />
                    <h1 class="ingridient-title">${products[i].name}</h1>
                </div>`;
                }
                if (products.length > 5) {
                    ingredientsHtml += `<div class="ingridient">
                    <h1 class="ingridient-more">+${products.length - 5} Други</h1>
                </div>`;
                }

                var nutritionalValue = recipe.nutritionalValue;
                // Create the element as a string since you're concatenating it into HTML
                var caloriesColorClass = nutritionalValue < 250 ? 'recipe-calories-green' :
                    nutritionalValue >= 250 && nutritionalValue <= 450 ? 'recipe-calories-orange' : 'recipe-calories-red';

                // Directly integrate the class determination into your HTML string
                var caloriesHTML = `<h2 class="recipe-calories ${caloriesColorClass}"><i class="fa fa-fire fire-icon"></i>${nutritionalValue} Калории</h2>`;


                // Building the entire recipe HTML
                html += `<div class="recipe-container">
                <div class="recipe-data">
                    <img class="recipe-image" src="${recipe.photo}" alt="image"/>
                    <div class="recipe-title-and-rating">
                        <h1 class="recipe-title">${recipe.name}</h1>
                        <div class="stars-container">${stars}</div>
                    </div>
                </div>
                <div class="recipe-products">
                    <h1 class="recipe-ingridients-title">Продукти</h1>
                    <div class="ingridients-container">${ingredientsHtml}</div>
                </div>
                <div class="recipe-buttons">
                    <button class="view-recipe-btn" data-recipe-id="${recipe.id}"><i class="fa fa-eye"></i>Виж рецептата</button>
                            ${caloriesHTML}
                </div>
            </div>`;
            });
            console.log(html);
            $('#recipeDisplay').html(html);
        }

        // Function to generate star ratings
        function generateStarRating(averageRating) {
            console.log(averageRating);
            var starsHtml = '';
            for (var i = 1; i <= 5; i++) {
                if (i <= averageRating) {
                    starsHtml += '<i class="fa-solid fa-star"></i>';
                } else {
                    starsHtml += '<i class="fa-regular fa-star"></i>';
                }
            }
            console.log(starsHtml);
            return starsHtml;
        }

        $(document).on('click', '.view-recipe-btn', function () {
            var recipeId = $(this).data('recipe-id');
            window.location.href = `/home/recipe/viewrecipe/${recipeId}`;
        });

    });

</script>